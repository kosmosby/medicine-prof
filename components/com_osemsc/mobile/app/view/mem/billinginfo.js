/*
 * File: app/view/BillingFieldset.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
Ext.define('MyApp.model.mem.billinginfo', {
    extend: 'Ext.data.Model',

    config: {
        fields: [
            {
                name: 'bill_firstname',
                type: 'string'
            },
            {
                name: 'bill_lastname',
                type: 'string'
            },
            {
                name: 'bill_addr1',
                type: 'string'
            },
            {
                name: 'bill_addr2',
                type: 'string'
            },
            {
                name: 'bill_country',
                type: 'string'
            },
            {
                name: 'bill_state',
                type: 'string'
            },
            {
                name: 'bill_postcode',
                type: 'string'
            }
        ],
        validations: [
        ]
    }
});

Ext.define('MyApp.view.mem.billinginfo', {
    extend: 'Ext.form.Panel',
    alias: 'widget.billinginfo',
    requires:['MyApp.field.HolderSelect'],
    config: {
        title: 'Billing Info.',
        items: [
            {
                xtype: 'textfield',
                label: Joomla.JText._('FIRST_NAME'),
                name: 'bill_firstname'
            },
            {
                xtype: 'textfield',
                label: Joomla.JText._('LAST_NAME'),
                name: 'bill_lastname'
            },
            {
                xtype: 'textareafield',
                label: Joomla.JText._('Billing_Address'),
                name: 'bill_addr1'
            },
            {
                xtype: 'textareafield',
                label: Joomla.JText._('Billing_Address_Line2'),
                name: 'bill_addr2'
            },
            {
                xtype: 'textfield',
                label: Joomla.JText._('Billing_CITY'),
                name: 'bill_city'
            },
            {
                xtype: 'textfield',
                label: Joomla.JText._('Billing_Postal_Code'),
                name: 'bill_postcode'
            },
            {
                label: 'Country',
                name: Joomla.JText._('Billing_COUNTRY'),
                xtype: 'holderselectfield',
                displayField: 'name',
        		valueField: 'abbr',
        		placeHolder: 'Please Choose',
        		required: true,
                store: {
                	fields: [
      					{name:'abbr',type:'string',mapping:'country_3_code'}
      					,{name:'name',type:'string',mapping:'country_name'}
      					,{name:'country_id',type:'int',mapping:'country_id'}
      				]
      			    ,data : getCountry().results
                },
                listeners: {
			    	change: function(f,nv,ov)	{
			    		var rec = f.getRecord();
			    		var state = f.up('billinginfo').down('#state');
			    		var store = state.getStore();
			    		store.clearFilter();
			    		store.filterBy(function(srec,id){
			    			return (srec.get('country_id') == rec.get('country_id'));
			    		});
			    	}
				    
	            }
            },
            {
                xtype: 'holderselectfield',
                label: Joomla.JText._('Billing_STATE'),
                name: 'bill_state',
                itemId: 'state',
                displayField: 'name',
        		valueField: 'abbr',
        		placeHolder: 'Please Choose',
        		required: true,
                store: {
                	fields: [
      					{name:'abbr',type:'string',mapping:'state_2_code'}
      					,{name:'name',type:'string',mapping:'state_name'}
      					,{name:'state_id',type:'int',mapping:'state_id'}
      					,{name:'country_id',type:'int',mapping:'country_id'}
      				]
      			    ,data : getState().results
      			    
                },
            	listeners: {
			    	initialize: function(f)	{
			    		f.getStore().filterBy(function(rec,id){
			    			return (rec.get('country_id') == 0);
			    		});
			    	}
			    }
            }
        ],
        listeners: [
            {
                fn: 'onPainted',
                event: 'painted'
            }
        ]
    },

	onPainted: function(f)	{
		var me = this;
    	var bar = f.up('navigationview').getNavigationBar();
    
    	bar.add({
    		xtype: 'button',
    		text: 'Save',
    		itemId: 'savebutton',
    		align: 'right',
    		handler: function(btn)	{
    			var fp = me;
            	var fv = fp.getValues();
    			var instance = Ext.create('MyApp.model.mem.billinginfo',fv);
                var errors = instance.validate();
                var message = '';
                if(errors.isValid()){
                	me.submit({
        				url: getCurrentUrl()+'index.php?option=com_osemsc&controller=member',
        				waitMsg : {message:'Please wait...',xtype: 'loadmask'},
     				    params: {
     				        task: 'action',action:'member.billinginfo.save'
     				    },
     				    success: function(form, result) {
     				    	var msg = result;
     				    	Ext.Msg.alert(msg.title,msg.content);
     				    },
     				    failure: function(form, result) {
     				    	var msg = result;
     				    	Ext.Msg.alert(msg.title,msg.content);
     				    }
        			});
                }	else	{
                	Ext.each(errors.items,function(rec,i){
                        message += rec.getField()+':'+rec.getMessage()+"<br>";
                    });
                    Ext.Msg.alert("Validate", message, function(){});
                    submit = false;
                    return false;
                }
                
    			
    		}
    	});
    	
    	// load Info
    	Ext.Ajax.request({
    		url: 'index.php?option=com_osemsc&controller=member',
			params:{task:'action',action:'member.billinginfo.getItemMobile'},
			success: function(res)	{
				var obj = Ext.decode(res.responseText);
				me.setValues(obj.result);
				me.setValues(obj.result);
			}
    	});
		
	}
});