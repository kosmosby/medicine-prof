/*
 * File: app/view/JuserFieldset.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.model.mem.juser', {
    extend: 'Ext.data.Model',

    config: {
        fields: [
            {
                name: 'firstname',
                type: 'string'
            },
            {
                name: 'lastname',
                type: 'string'
            },
            {
                name: 'username',
                type: 'string'
            },
            {
                name: 'email',
                type: 'string'
            },
            {
                name: 'password',
                type: 'string'
            },
            {
                name: 'password2',
                type: 'string'
            }
        ],
        validations: [
            {
                type: 'format',
                matcher: /([a-zA-Z0-9\.])+/,
                field: 'firstname'
            },
            {
                type: 'format',
                matcher: /([a-zA-Z0-9\.])+/,
                field: 'lastname'
            },
            {
                type: 'format',
                matcher: /([a-zA-Z0-9\.])+/,
                field: 'username'
            },
            {
                type: 'email',
                field: 'email'
            },
            {
            	type: 'format',
            	matcher: /([a-zA-Z0-9\.])*/,
                field: 'password'
            },
            {
                type: 'password',
                field: 'password2',
                message: ' is not equal Password'
            }
        ]
    },

    validate: function() {

        var errors      = Ext.create('Ext.data.Errors'),
            validations = this.getValidations().items,
            validators  = Ext.data.Validations,
            length, validation, field, valid, type, i;

        if (validations) {
            length = validations.length;

            for (i = 0; i < length; i++) {
                validation = validations[i];
                field = validation.field || validation.name;
                type  = validation.type;

                if(type == 'password') {
                    valid = validators[type](validation, this.get(field),this);
                } else {
                    valid = validators[type]( validation, this.get(field) );
                }

                if (!valid) {
                    errors.add(Ext.create('Ext.data.Error', {
                        field  : field,
                        message: validation.message || validators.getMessage(type)
                    }));
                }
            }
        }

        return errors;

    }

});

Ext.define('MyApp.view.mem.juser', {
    extend: 'Ext.form.Panel',
    alias: 'widget.juser',
    config: {
        title: 'JUser',
        items: [
            
            {
                xtype: 'textfield',
                label: Joomla.JText._('Username'),
                name: 'username',
                required: true
            },
            {
                xtype: 'textfield',
                label: Joomla.JText._('FIRST_NAME'),
                name: 'firstname'
            },
            {
                xtype: 'textfield',
                label: Joomla.JText._('LAST_NAME'),
                name: 'lastname'
            },
            {
                xtype: 'emailfield',
                label: Joomla.JText._('EMAIL'),
                name: 'email',
                placeHolder: 'email@example.com'
            },
            {
                xtype: 'passwordfield',
                itemId: 'password',
                label: Joomla.JText._('PASSWORD'),
                name: 'password'
            },
            {
                xtype: 'passwordfield',
                itemId: 'mypasswordfield1',
                label: Joomla.JText._('PASSWORD_CONFIRM'),
                name: 'password2'
            }
        ],
        listeners: [
            {
                fn: 'onMypasswordfield1Blur',
                event: 'blur',
                delegate: '#mypasswordfield1'
            },
            {
                fn: 'onPainted',
                event: 'painted'
            }
        ]
    },

    onMypasswordfield1Blur: function(textfield, e, options) {
       
    },
    
    onPainted: function(f)	{
    	var me = this;
    	var bar = f.up('navigationview').getNavigationBar();
    	bar.add({
    		xtype: 'button',
    		text: 'Save',
    		itemId: 'savebutton',
    		align: 'right',
    		handler: function(btn)	{
    			var fp = me;
            	var fv = fp.getValues();
    			var instance = Ext.create('MyApp.model.mem.juser',fv);
                var errors = instance.validate();
                var message = '';
                if(errors.isValid()){
                	me.submit({
        				url: getCurrentUrl()+'index.php?option=com_osemsc&controller=member',
        				waitMsg : {message:'Please wait...',xtype: 'loadmask'},
     				    params: {
     				        task: 'action',action:'member.juser.save'
     				    },
     				    success: function(form, result) {
     				    	var msg = result;
     				    	Ext.Msg.alert(msg.title,msg.content);
     				    },
     				    failure: function(form, result) {
     				    	var msg = result;
     				    	Ext.Msg.alert(msg.title,msg.content);
     				    }
        			});
                }	else	{
                	Ext.each(errors.items,function(rec,i){
                        message += rec.getField()+':'+rec.getMessage()+"<br>";
                    });
                    Ext.Msg.alert("Validate", message, function(){});
                    submit = false;
                    return false;
                }
                
    			
    		}
    	});
    	
    	// load Info
    	Ext.Ajax.request({
    		url: 'index.php?option=com_osemsc&controller=member',
			params:{task:'action',action:'member.juser.getItem'},
			success: function(res)	{
				var obj = Ext.decode(res.responseText);
				me.setValues(obj.result);
			}
    	});
    }

});