/*
 * File: app/view/BillingFieldset.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.reg.ProfileFieldset', {
    extend: 'Ext.form.FieldSet',
    alias: 'widget.profile',
    requires:['MyApp.field.HolderSelect'],
    config: {
        title: Joomla.JText._('Additional_Information'),
        
    	listeners: {
        	initialize: function(f)	{
        		//alert(oseGetProfileFields().total);
        		var results = getOSEProfile().results;
        		for(i=0; i<oseGetProfileFields().total; i++)
        		{
        			switch (results[i].type)
					{
						case('textfield'):
							var field = Ext.create('Ext.field.Text', {
			        		    label: results[i].name,
			        		    name:'profile_'+results[i].id,
			        		    value: results[i].value,
			        		    required: results[i].require
			        		});
							f.add(field);
						break;	
						case('textarea'):
							var field = Ext.create('Ext.field.TextArea', {
			        		    label: results[i].name,
			        		    name:'profile_'+results[i].id,
			        		    value: results[i].value,
			        		    required: results[i].require
			        		});
							f.add(field);
						break;
						case('combo'):
							var field = Ext.create('Ext.field.Select', {
			        		    label: results[i].name,
			        		    name:'profile_'+results[i].id,
			        		    required: results[i].require,
			        		    displayField: 'name',
			            		valueField: 'name',
			            		placeHolder: 'Please Choose',
			                    store: {
			                    	fields: [
			          					 {name: 'name', type: 'string', mapping: 'name'}
			          				]
			          			    ,data :results[i].data
			                    },
			                	listeners: {
			    			    	initialize: function(f)	{
			    			    		f.setValue(results[i].value);
			    			    	}
			    			    }
			        		});
							f.add(field);
						break;
						case('radio'):
							var field = Ext.create('Ext.field.Radio', {
			        		    label: results[i].name,
			        		    name:'profile_'+results[i].id,
			        		    value: results[i].value,
			        		    required: results[i].require
			        		});
							f.add(field);
						break;
						case('multiselect'):
							
							break;
						case('fileuploadfield'):
							
							break;	
						case('datefield'):
							var field = Ext.create('Ext.field.DatePicker', {
			        		    label: results[i].name,
			        		    name:'profile_'+results[i].id,
			        		    value: results[i].value,  
			        		    required: results[i].require,
                                picker: {    
                                	yearFrom: 1900, yearTo  : 2100 
                                }
			        		});
							f.add(field);
							break;
					}
        		}	
        	      		
        	}
        }
        
    }

});