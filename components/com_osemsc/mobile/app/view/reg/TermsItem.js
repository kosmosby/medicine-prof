/*
 * File: app/view/TermsItem.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.reg.TermsItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.termsitem',
    checkTotal: 0,
    config: {
        //padding: 10,
        layout: {
            type: 'hbox'
        },
        items: [
            {
                xtype: 'container',
                width: '100%',
                layout: {
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'checkboxfield',
                        height: 53,
                        width: 65,
                        listeners: {
                        	check: function(f)	{
                        		var ti = f.up('termsview');
                        		ti.checkTotal++;
                        		
                        		if(ti.checkTotal == getTerms().length)	{
                        			ti.up('formpanel').down('#save').setDisabled(false);
                        		}
                        	},
                        	uncheck: function(f)	{
                        		var ti = f.up('termsview');
                        		ti.checkTotal--;
                        		
                        		if(ti.checkTotal < getTerms().length)	{
                        			ti.up('formpanel').down('#save').setDisabled(true);
                        		}
                        	}
                        }
                    },
                    {
                        xtype: 'container',
                        html: 'I agree to',
                        styleHtmlContent: true
                    },
                    {
                        xtype: 'container',
                        itemId: 'termstitle',
                        flex: 1,
                        styleHtmlContent: true,
                        listeners: [
							{
							    element: 'innerElement',
							    //delegate: 'a.termstitle',
							    event: 'tap',
							    fn: function(event,node) {
							        var rec = this.up('termsitem').getRecord();
							        
							        Ext.create('Ext.Panel',{
							        	width: '80%',
							        	height: '80%',
							        	modal: true,
							        	hideOnMaskTap: true,
							        	items: [{
							        		xtype: 'toolbar',
							                docked: 'top',
							                title: rec.get('subject'),
							                items: [{
							                	xtype: 'button',
							                	ui: 'decline',
							                	handler: function(btn)	{
							                		btn.up('panel').destroy();
							                	},
							                	text: 'Close'
							                }]
							        	}],
							        	html: rec.get('body'),
							        	left: 10,
							        	top:10
							        	
							        }).showBy(this.up('formpanel'),'c-c');
							    }
							}
                        ]
                    }
                ]
            }
        ]
    },

    
    updateRecord: function(record) {
        // Provide an implementation to update this container's child items
    	
    	this.down('#termstitle').setHtml('<a class="termstitle" href="javascript:void(0);">'+record.get('subject')+'</a>');
    	this.setRecord(record);
    }

});