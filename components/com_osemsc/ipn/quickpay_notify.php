<?php/** * @version     5.0 + * @package        Open Source Membership Control - com_osemsc * @subpackage    Open Source Access Control - com_osemsc * @author        Open Source Excellence (R) {@link  http://www.opensource-excellence.com} * @author        Created on 15-Nov-2010 * @license GNU/GPL http://www.gnu.org/copyleft/gpl.html * * *  This program is free software: you can redistribute it and/or modify *  it under the terms of the GNU General Public License as published by *  the Free Software Foundation, either version 3 of the License, or *  (at your option) any later version. * *  This program is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *  GNU General Public License for more details. * *  You should have received a copy of the GNU General Public License *  along with this program.  If not, see <http://www.gnu.org/licenses/>. *  @Copyright Copyright (C) 2010- Open Source Excellence (R); */if ($_POST){	header("HTTP/1.0 200 OK");	//global $mosConfig_absolute_path, $mosConfig_live_site, $mosConfig_lang, $database, $mailfrom, $fromname;	/*** access Joomla's configuration file ***/	// Set flag that this is a parent file	define('_JEXEC', 1);	define('JPATH_BASE', dirname(dirname(dirname(dirname(__FILE__)))));	define('DS', DIRECTORY_SEPARATOR);	require_once(JPATH_BASE.DS.'includes'.DS.'defines.php');	require_once(JPATH_BASE.DS.'includes'.DS.'framework.php');	/**	 * CREATE THE APPLICATION	 *	 * NOTE :	 */	$mainframe= & JFactory :: getApplication('site');	jimport('joomla.plugin.helper');	/*** END of Joomla config ***/	/*** OSE part ***/	require_once(JPATH_BASE.DS."components".DS."com_osemsc".DS."init.php");	/*** END OSE part ***/	$oseMscConfig= oseRegistry :: call('msc')->getConfig(null, 'obj');	$apiEmail= oseRegistry :: call('member')->getInstance('email');	$merchant = $oseMscConfig->quickpay_merchant;	$secret = $oseMscConfig->quickpay_secret;   	$test_mode = $oseMscConfig->quickpay_testmode;   	$cardtypelock = $oseMscConfig->quickpay_cardtypelock;   	$autocapture = $oseMscConfig->quickpay_autocapture;   	$autofee = $oseMscConfig->quickpay_autofee;   	$lang = empty($oseMscConfig->quickpay_lang)?'en':$oseMscConfig->quickpay_lang;   		$config= new JConfig();	$mailfrom= $config->mailfrom;	$fromname= $config->fromname;		$process= new oseMscIpnQuickpay();	$order_id = (int)$process->get('ordernumber');	$db= oseDB :: instance();	$where= array();	$where[]= "`order_id`=".$db->quote($order_id);	$payment= oseRegistry :: call('payment');	$orderInfo = $payment->getOrder($where, 'obj');	if(empty($orderInfo)) {		$mailsubject= "IPN Fatal Error on your Site";		$mailbody= "Can not search any order information with utilizing the order number feedbacked by The IPN				----------------------------------\n				Invoice: ".$process->get('ordernumber')."\n";		$emailObj= new stdClass();		$emailObj->subject= $mailsubject;		$emailObj->body= $mailbody;		$apiEmail->sendToAdminGroup($emailObj, $oseMscConfig->admin_group);		return;	}		$order_id= $orderInfo->order_id;	$member_id= $orderInfo->user_id;	$md5String = $process->get('msgtype').$process->get('ordernumber').$process->get('amount').$process->get('currency').$process->get('time').$process->get('state').$process->get('qpstat').$process->get('qpstatmsg').$process->get('chstat').$process->get('chstatmsg').$process->get('merchant').$process->get('merchantemail').$process->get('transaction').$process->get('cardtype').$process->get('cardnumber').$process->get('cardexpire').$process->get('splitpayment').$process->get('fraudprobability').$process->get('fraudremarks').$process->get('fraudreport').$process->get('fee',0).$secret;	$md5check = md5($md5String);	if($md5check != $process->get('md5check'))	{		$mailsubject= "IPN Fatal Error on your site";		$mailbody= "Hello,			a Failed Transaction requires your attention.IPN verify failed			-----------------------------------------------------------			Order ID: ".$md5String."\r\n IPN:".http_build_query($_POST);		$emailObj= new stdClass();		$emailObj->subject= $mailsubject;		$emailObj->body= $mailbody;		$apiEmail->sendToAdminGroup($emailObj, $oseMscConfig->admin_group);			return;	}		if($process->get('qpstat') == '000')	{		$payment= oseRegistry :: call('payment')->getInstance('Order');		$payment->confirmOrder($order_id, array());		$payment->updateOrder($order_id,'confirmed',array('payment_serial_number'=>$process->get('transaction')));	}	}class oseMscIpnQuickpay {	function __construct() {		// Notify string		$this->msgtype= JRequest :: getVar('msgtype');		$this->ordernumber= JRequest :: getVar('ordernumber');		$this->amount= JRequest :: getVar('amount');		$this->currency= JRequest :: getVar('currency');		$this->time= JRequest :: getVar('time');		$this->state= JRequest :: getVar('state');		$this->qpstat= JRequest :: getVar('qpstat');		$this->qpstatmsg= JRequest :: getVar('qpstatmsg');		$this->chstat= JRequest :: getVar('chstat');		$this->chstatmsg= JRequest :: getVar('chstatmsg');		$this->merchant= JRequest :: getVar('merchant');		$this->merchantemail= JRequest :: getVar('merchantemail');		$this->transaction= JRequest :: getVar('transaction');		$this->cardtype= JRequest :: getVar('cardtype');		$this->cardnumber= JRequest :: getVar('cardnumber');		$this->cardexpire= JRequest :: getVar('cardexpire');		$this->splitpayment= JRequest :: getVar('splitpayment');		$this->fraudprobability= JRequest :: getVar('fraudprobability');		$this->fraudremarks= JRequest :: getVar('fraudremarks');		$this->fraudreport= JRequest :: getVar('fraudreport');		$this->fee= JRequest :: getVar('fee');		$this->md5check= JRequest :: getVar('md5check');	}		function blockUser($member_id) {		// Block the user immediately;		$db= & JFactory :: getDBO();		$query= "UPDATE `#__users` SET `block` =  '1' WHERE `id` = ".(int) $member_id;		$db->setQuery($query);		$db->query();		// Logout the user as well;//		$query= "DELETE FROM `#__session` WHERE `userid` = ".(int) $member_id." AND `client_id` = 0";//		$db->setQuery($query);//		$db->query();	}	function get($key, $default= null) {		if(empty($this->{$key})) {			$this->{$key}= $default;		}		return $this-> {$key};	}}?>