<?php/**  * @version     5.0 +  * @package        Open Source Membership Control - com_osemsc  * @subpackage    Open Source Access Control - com_osemsc  * @author        Open Source Excellence {@link http://www.opensource-excellence.co.uk}  * @author        EasyJoomla {@link http://www.easy-joomla.org Easy-Joomla.org}  * @author        SSRRN {@link http://www.ssrrn.com}  * @author        Created on 15-Sep-2008  * @license GNU/GPL http://www.gnu.org/copyleft/gpl.html  *  *  *  This program is free software: you can redistribute it and/or modify  *  it under the terms of the GNU General Public License as published by  *  the Free Software Foundation, either version 3 of the License, or  *  (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU General Public License for more details.  *  *  You should have received a copy of the GNU General Public License  *  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *  @Copyright Copyright (C) 2010- ... author-name*/defined('_JEXEC') or die("Direct Access Not Allowed");class AuthnetARBException extends Exception {}class AuthnetARB {	private $params= array();	private $sucess= false;	private $error= true;	private $xml;	private $response;	private $resultCode;	private $code;	private $text;	private $subscrId;	public $url;	public function __construct() {		$this->params['interval_length']= 1;		$this->params['interval_unit']= 'months';		//$this->params['startDate']= date("Y-m-d", strtotime("+ 1 month"));		$this->params['totalOccurrences']= 9999;		$this->params['trialOccurrences']= 0;		$this->params['trialAmount']= 0.00;	}	public function __toString() {		if(!$this->params) {			return (string) $this;		}		$output= "";		$output .= '<table summary="Authnet Results" id="authnet">'."\n";		$output .= '<tr>'."\n\t\t".'<th colspan="2"><b>Outgoing Parameters</b></th>'."\n".'</tr>'."\n";		foreach($this->params as $key => $value) {			$output .= "\t".'<tr>'."\n\t\t".'<td><b>'.$key.'</b></td>';			$output .= '<td>'.$value.'</td>'."\n".'</tr>'."\n";		}		$output .= '</table>'."\n";		return $output;	}	private function process($retries= 1) {		$count= 0;		while($count < $retries) {			$path= "/xml/v1/request.api";			$this->response= OSECONNECTOR :: send_request_via_fsockopen($this->url, $path, $this->xml);			$this->parseResults();			if($this->resultCode === "Ok") {				$this->success= true;				$this->error= false;				break;			} else {				$this->success= false;				$this->error= true;				break;			}			$count++;		}	}	public function createAccount() {		$this->xml= "<?xml version='1.0' encoding='utf-8'?>		                      <ARBCreateSubscriptionRequest xmlns='AnetApi/xml/v1/schema/AnetApiSchema.xsd'>		                          <merchantAuthentication>		                              <name>".$this->params['login']."</name>		                              <transactionKey>".$this->params['transkey']."</transactionKey>		                          </merchantAuthentication>		                          <refId>".$this->params['refID']."</refId>		                          <subscription>		                              <name>".$this->params['subscrName']."</name>		                              <paymentSchedule>		                                  <interval>		                                      <length>".$this->params['interval_length']."</length>		                                      <unit>".$this->params['interval_unit']."</unit>		                                  </interval>		                                  <startDate>".$this->params['startDate']."</startDate>		                                  <totalOccurrences>".$this->params['totalOccurrences']."</totalOccurrences>		                                  <trialOccurrences>".$this->params['trialOccurrences']."</trialOccurrences>		                              </paymentSchedule>		                              <amount>".$this->params['amount']."</amount>		                              <trialAmount>".$this->params['trialAmount']."</trialAmount>		                              <payment>		                                  <creditCard>		                                      <cardNumber>".$this->params['cardNumber']."</cardNumber>		                                      <expirationDate>".$this->params['expirationDate']."</expirationDate>		                                      <cardCode>".$this->params['cardCode']."</cardCode>		                                  </creditCard>		                              </payment>		                              <order>		                                  <invoiceNumber>".$this->params['orderInvoiceNumber']."</invoiceNumber>		                                  <description>".$this->params['orderDescription']."</description>		                              </order>		                              <customer>		                                  <id>".$this->params['customerId']."</id>		                                  <email>".$this->params['customerEmail']."</email>		                                  <phoneNumber>".$this->params['customerPhoneNumber']."</phoneNumber>		                                  <faxNumber>".$this->params['customerFaxNumber']."</faxNumber>		                              </customer>		                              <billTo>		                                  <firstName>".$this->params['firstName']."</firstName>		                                  <lastName>".$this->params['lastName']."</lastName>		                                  <address>".$this->params['address']."</address>		                                  <city>".$this->params['city']."</city>		                                  <state>".$this->params['state']."</state>		                                  <zip>".$this->params['zip']."</zip>		                              </billTo>		                          </subscription>		                      </ARBCreateSubscriptionRequest>";		$this->process();	}	public function updateAccount() {		$this->xml= "<?xml version='1.0' encoding='utf-8'?>		                      <ARBUpdateSubscriptionRequest xmlns='AnetApi/xml/v1/schema/AnetApiSchema.xsd'>		                          <merchantAuthentication>		                              <name>".$this->params['login']."</name>		                              <transactionKey>".$this->params['transkey']."</transactionKey>		                          </merchantAuthentication>		                          <refId>".$this->params['refID']."</refId>		                          <subscriptionId>".$this->params['subscrId']."</subscriptionId>		                          <subscription>		                              <name>".$this->params['subscrName']."</name>		                              <amount>".$this->params['amount']."</amount>		                              <trialAmount>".$this->params['trialAmount']."</trialAmount>		                              <payment>		                                  <creditCard>		                                      <cardNumber>".$this->params['cardNumber']."</cardNumber>		                                      <expirationDate>".$this->params['expirationDate']."</expirationDate>		                                      <cardCode>".$this->params['cardCode']."</cardCode>		                                  </creditCard>		                              </payment>		                              <billTo>		                                  <firstName>".$this->params['firstName']."</firstName>		                                  <lastName>".$this->params['lastName']."</lastName>		                                  <address>".$this->params['address']."</address>		                                  <city>".$this->params['city']."</city>		                                  <state>".$this->params['state']."</state>		                                  <zip>".$this->params['zip']."</zip>		                              </billTo>		                          </subscription>		                      </ARBUpdateSubscriptionRequest>";		$this->process();	}	public function deleteAccount() {		$this->xml= "<?xml version='1.0' encoding='utf-8'?>		                      <ARBCancelSubscriptionRequest xmlns='AnetApi/xml/v1/schema/AnetApiSchema.xsd'>		                          <merchantAuthentication>		                              <name>".$this->params['login']."</name>		                              <transactionKey>".$this->params['transkey']."</transactionKey>		                          </merchantAuthentication>		                          <refId>".$this->params['refID']."</refId>		                          <subscriptionId>".$this->params['subscrId']."</subscriptionId>		                      </ARBCancelSubscriptionRequest>";		$this->process();	}	private function parseResults() {		$content = OSECONNECTOR :: parse_return($this->response);		list($refId, $resultCode, $code, $text, $subscriptionId)= $content;		$this->resultCode= $resultCode;		$this->code= $code;		$this->text= $text;		$this->subscrId= $subscriptionId;				if(count($content) == 6)		{			$this->status = $content[5];		}	}	private function parseXML($start, $end) {		return preg_replace('|^.*?'.$start.'(.*?)'.$end.'.*?$|i', '$1', substr($this->response, 335));	}	public function setParameter($field= "", $value= null) {		$field=(is_string($field)) ? trim($field) : $field;		$value=(is_string($value)) ? trim($value) : $value;		if(!is_string($field)) {			throw new AuthnetARBException("setParameter() arg 1 must be a string or integer: ".gettype($field)." given.");		}		if(!is_string($value) && !is_numeric($value) && !is_bool($value)) {			throw new AuthnetARBException("setParameter() arg 2 must be a string, integer, or boolean value: ".gettype($value)." given.");		}		if(empty($field)) {			throw new AuthnetARBException("setParameter() requires a parameter field to be named.");		}		if($value === "") {			throw new AuthnetARBException("setParameter() requires a parameter value to be assigned: $field");		}		$this->params[$field]= $value;	}	public function isSuccessful() {		return $this->success;	}	public function isError() {		return $this->error;	}	public function getResponse() {		return strip_tags($this->text);	}	public function getResponseCode() {		return $this->code;	}	public function getSubscriberID() {		return $this->subscrId;	}		public function getSubscriptionStatus() {		$this->xml = "<?xml version='1.0' encoding='utf-8'?>                      <ARBGetSubscriptionStatusRequest xmlns='AnetApi/xml/v1/schema/AnetApiSchema.xsd'>                          <merchantAuthentication>                              <name>".$this->login."</name>	                              <transactionKey>".$this->transkey."</transactionKey>                          </merchantAuthentication>                          <subscriptionId>".$this->params['subscrId']."</subscriptionId>                      </ARBGetSubscriptionStatusRequest>"                    ;		$this->process();	}		public function updateCreditCard() {		$this->xml= "<?xml version='1.0' encoding='utf-8'?>				                      <ARBUpdateSubscriptionRequest xmlns='AnetApi/xml/v1/schema/AnetApiSchema.xsd'>				                          <merchantAuthentication>				                              <name>".$this->params['login']."</name>				                              <transactionKey>".$this->params['transkey']."</transactionKey>				                          </merchantAuthentication>				                          <refId>".$this->params['refID']."</refId>				                          <subscriptionId>".$this->params['subscrId']."</subscriptionId>				                          <subscription>				                              				                              <payment>				                                  <creditCard>				                                      <cardNumber>".$this->params['cardNumber']."</cardNumber>				                                      <expirationDate>".$this->params['expirationDate']."</expirationDate>				                                      <cardCode>".$this->params['cardCode']."</cardCode>				                                  </creditCard>				                              </payment>				                          </subscription>				                      </ARBUpdateSubscriptionRequest>";		$this->process();	}}?>
